input: "data"
input_shape{dim:128 dim:25088 dim:1 dim:1} # 25088 = 512 * 7 * 7
input: "mask"
input_shape{dim:128 dim:80} # 80 = 4 values per class
input: "targets"
input_shape{dim:128 dim:80} # 80 = 4 values per class

#--------------------------layer 6------------------------
layer { name:   "fc6" type: "InnerProduct" bottom: "data" top: "fc6" param {lr_mult: 1} param {lr_mult: 2} inner_product_param{ num_output: 4096}}
layer { bottom: "fc6" top: "fc6" name: "relu6" type: "ReLU"}
layer { bottom: "fc6" top: "fc6" name: "drop6" type: "Dropout" dropout_param { dropout_ratio: 0.5 } }

#--------------------------layer 7------------------------
layer { name:   "fc7" type: "InnerProduct" bottom: "fc6" top: "fc7" param {lr_mult: 1} param {lr_mult: 2} inner_product_param{ num_output: 4096}}
layer { bottom: "fc7" top: "fc7" name: "relu7" type: "ReLU"}
layer { bottom: "fc7" top: "fc7" name: "drop7" type: "Dropout" dropout_param { dropout_ratio: 0.5 } }

#--------------------------layer 8------------------------
layer { name: "fc8_bbox_reg" type: "InnerProduct" bottom: "fc7" top: "fc8_bbox_reg" param {lr_mult: 1 decay_mult: 1.} param {lr_mult: 2 decay_mult: 0.} 
	inner_product_param{ num_output: 80 weight_filler { type: "gaussian" std: 0.01} bias_filler { type: "constant" value: 0 }}}

#-------------------------- loss -------------------------
# mask the predicted values 
layer {name: "fc8_bbox_reg_mask" type: "Eltwise" bottom: "fc8_bbox_reg" bottom: "mask" top: "predictions" eltwise_param{operation: PROD stable_prod_grad: true}}
layer {name: "targets_mask" type: "Eltwise" bottom: "targets" bottom: "mask" top: "targets_mask" eltwise_param{operation: PROD stable_prod_grad: true}}
layer {name: "error" type: "EuclideanLoss" bottom: "targets_mask" bottom: "predictions" top: "error"}
